{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Com.Digitalasset.Ledger.Api.V1.Testing.TimeService where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
       (serverLoop)
import qualified Google.Protobuf.Empty
import qualified Google.Protobuf.Timestamp
 
data TimeService request response = TimeService{timeServiceGetTime
                                                ::
                                                request 'HsGRPC.ServerStreaming
                                                  Com.Digitalasset.Ledger.Api.V1.Testing.TimeService.GetTimeRequest
                                                  Com.Digitalasset.Ledger.Api.V1.Testing.TimeService.GetTimeResponse
                                                  ->
                                                  Hs.IO
                                                    (response 'HsGRPC.ServerStreaming
                                                       Com.Digitalasset.Ledger.Api.V1.Testing.TimeService.GetTimeResponse),
                                                timeServiceSetTime ::
                                                request 'HsGRPC.Normal
                                                  Com.Digitalasset.Ledger.Api.V1.Testing.TimeService.SetTimeRequest
                                                  Google.Protobuf.Empty.Empty
                                                  ->
                                                  Hs.IO
                                                    (response 'HsGRPC.Normal
                                                       Google.Protobuf.Empty.Empty)}
                                  deriving Hs.Generic
 
timeServiceServer ::
                    TimeService HsGRPC.ServerRequest HsGRPC.ServerResponse ->
                      HsGRPC.ServiceOptions -> Hs.IO ()
timeServiceServer
  TimeService{timeServiceGetTime = timeServiceGetTime,
              timeServiceSetTime = timeServiceSetTime}
  (ServiceOptions serverHost serverPort useCompression
     userAgentPrefix userAgentSuffix initialMetadata sslConfig logger)
  = (HsGRPC.serverLoop
       HsGRPC.defaultOptions{HsGRPC.optNormalHandlers =
                               [(HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/com.digitalasset.ledger.api.v1.testing.TimeService/SetTime")
                                   (HsGRPC.convertGeneratedServerHandler timeServiceSetTime))],
                             HsGRPC.optClientStreamHandlers = [],
                             HsGRPC.optServerStreamHandlers =
                               [(HsGRPC.ServerStreamHandler
                                   (HsGRPC.MethodName
                                      "/com.digitalasset.ledger.api.v1.testing.TimeService/GetTime")
                                   (HsGRPC.convertGeneratedServerWriterHandler
                                      timeServiceGetTime))],
                             HsGRPC.optBiDiStreamHandlers = [], optServerHost = serverHost,
                             optServerPort = serverPort, optUseCompression = useCompression,
                             optUserAgentPrefix = userAgentPrefix,
                             optUserAgentSuffix = userAgentSuffix,
                             optInitialMetadata = initialMetadata, optSSLConfig = sslConfig,
                             optLogger = logger})
 
timeServiceClient ::
                    HsGRPC.Client ->
                      Hs.IO (TimeService HsGRPC.ClientRequest HsGRPC.ClientResult)
timeServiceClient client
  = (Hs.pure TimeService) <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/com.digitalasset.ledger.api.v1.testing.TimeService/GetTime")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/com.digitalasset.ledger.api.v1.testing.TimeService/SetTime")))
 
data GetTimeRequest = GetTimeRequest{getTimeRequestLedgerId ::
                                     Hs.Text}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named GetTimeRequest where
        nameOf _ = (Hs.fromString "GetTimeRequest")
 
instance HsProtobuf.HasDefault GetTimeRequest
 
instance HsProtobuf.Message GetTimeRequest where
        encodeMessage _
          GetTimeRequest{getTimeRequestLedgerId = getTimeRequestLedgerId}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   getTimeRequestLedgerId)])
        decodeMessage _
          = (Hs.pure GetTimeRequest) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "ledger_id")
                []
                "")]
 
instance HsJSONPB.ToJSONPB GetTimeRequest where
        toJSONPB (GetTimeRequest f1)
          = (HsJSONPB.object ["ledger_id" .= f1])
        toEncodingPB (GetTimeRequest f1)
          = (HsJSONPB.pairs ["ledger_id" .= f1])
 
instance HsJSONPB.FromJSONPB GetTimeRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetTimeRequest"
               (\ obj -> (Hs.pure GetTimeRequest) <*> obj .: "ledger_id"))
 
instance HsJSONPB.ToJSON GetTimeRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON GetTimeRequest where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema GetTimeRequest where
        declareNamedSchema _
          = do let declare_ledger_id = HsJSONPB.declareSchemaRef
               getTimeRequestLedgerId <- declare_ledger_id Proxy.Proxy
               let _ = Hs.pure GetTimeRequest <*>
                         HsJSONPB.asProxy declare_ledger_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetTimeRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("ledger_id", getTimeRequestLedgerId)]}})
 
data GetTimeResponse = GetTimeResponse{getTimeResponseCurrentTime
                                       :: Hs.Maybe Google.Protobuf.Timestamp.Timestamp}
                     deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named GetTimeResponse where
        nameOf _ = (Hs.fromString "GetTimeResponse")
 
instance HsProtobuf.HasDefault GetTimeResponse
 
instance HsProtobuf.Message GetTimeResponse where
        encodeMessage _
          GetTimeResponse{getTimeResponseCurrentTime =
                            getTimeResponseCurrentTime}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                      @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                      getTimeResponseCurrentTime))])
        decodeMessage _
          = (Hs.pure GetTimeResponse) <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
                 @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"])))))
                (HsProtobuf.Single "current_time")
                []
                "")]
 
instance HsJSONPB.ToJSONPB GetTimeResponse where
        toJSONPB (GetTimeResponse f1)
          = (HsJSONPB.object ["current_time" .= f1])
        toEncodingPB (GetTimeResponse f1)
          = (HsJSONPB.pairs ["current_time" .= f1])
 
instance HsJSONPB.FromJSONPB GetTimeResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetTimeResponse"
               (\ obj -> (Hs.pure GetTimeResponse) <*> obj .: "current_time"))
 
instance HsJSONPB.ToJSON GetTimeResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON GetTimeResponse where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema GetTimeResponse where
        declareNamedSchema _
          = do let declare_current_time = HsJSONPB.declareSchemaRef
               getTimeResponseCurrentTime <- declare_current_time Proxy.Proxy
               let _ = Hs.pure GetTimeResponse <*>
                         HsJSONPB.asProxy declare_current_time
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetTimeResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("current_time",
                                                         getTimeResponseCurrentTime)]}})
 
data SetTimeRequest = SetTimeRequest{setTimeRequestLedgerId ::
                                     Hs.Text,
                                     setTimeRequestCurrentTime ::
                                     Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
                                     setTimeRequestNewTime ::
                                     Hs.Maybe Google.Protobuf.Timestamp.Timestamp}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named SetTimeRequest where
        nameOf _ = (Hs.fromString "SetTimeRequest")
 
instance HsProtobuf.HasDefault SetTimeRequest
 
instance HsProtobuf.Message SetTimeRequest where
        encodeMessage _
          SetTimeRequest{setTimeRequestLedgerId = setTimeRequestLedgerId,
                         setTimeRequestCurrentTime = setTimeRequestCurrentTime,
                         setTimeRequestNewTime = setTimeRequestNewTime}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   setTimeRequestLedgerId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                      @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                      setTimeRequestCurrentTime)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                      @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                      setTimeRequestNewTime))])
        decodeMessage _
          = (Hs.pure SetTimeRequest) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
                 @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
                 @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "ledger_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"])))))
                (HsProtobuf.Single "current_time")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"])))))
                (HsProtobuf.Single "new_time")
                []
                "")]
 
instance HsJSONPB.ToJSONPB SetTimeRequest where
        toJSONPB (SetTimeRequest f1 f2 f3)
          = (HsJSONPB.object
               ["ledger_id" .= f1, "current_time" .= f2, "new_time" .= f3])
        toEncodingPB (SetTimeRequest f1 f2 f3)
          = (HsJSONPB.pairs
               ["ledger_id" .= f1, "current_time" .= f2, "new_time" .= f3])
 
instance HsJSONPB.FromJSONPB SetTimeRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SetTimeRequest"
               (\ obj ->
                  (Hs.pure SetTimeRequest) <*> obj .: "ledger_id" <*>
                    obj .: "current_time"
                    <*> obj .: "new_time"))
 
instance HsJSONPB.ToJSON SetTimeRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON SetTimeRequest where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema SetTimeRequest where
        declareNamedSchema _
          = do let declare_ledger_id = HsJSONPB.declareSchemaRef
               setTimeRequestLedgerId <- declare_ledger_id Proxy.Proxy
               let declare_current_time = HsJSONPB.declareSchemaRef
               setTimeRequestCurrentTime <- declare_current_time Proxy.Proxy
               let declare_new_time = HsJSONPB.declareSchemaRef
               setTimeRequestNewTime <- declare_new_time Proxy.Proxy
               let _ = Hs.pure SetTimeRequest <*>
                         HsJSONPB.asProxy declare_ledger_id
                         <*> HsJSONPB.asProxy declare_current_time
                         <*> HsJSONPB.asProxy declare_new_time
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SetTimeRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("ledger_id", setTimeRequestLedgerId),
                                                        ("current_time", setTimeRequestCurrentTime),
                                                        ("new_time", setTimeRequestNewTime)]}})