{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService
       where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
       (serverLoop)
 
data PartyManagementService request
     response = PartyManagementService{partyManagementServiceGetParticipantId
                                       ::
                                       request 'HsGRPC.Normal
                                         Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.GetParticipantIdRequest
                                         Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.GetParticipantIdResponse
                                         ->
                                         Hs.IO
                                           (response 'HsGRPC.Normal
                                              Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.GetParticipantIdResponse),
                                       partyManagementServiceListKnownParties ::
                                       request 'HsGRPC.Normal
                                         Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.ListKnownPartiesRequest
                                         Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.ListKnownPartiesResponse
                                         ->
                                         Hs.IO
                                           (response 'HsGRPC.Normal
                                              Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.ListKnownPartiesResponse),
                                       partyManagementServiceAllocateParty ::
                                       request 'HsGRPC.Normal
                                         Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.AllocatePartyRequest
                                         Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.AllocatePartyResponse
                                         ->
                                         Hs.IO
                                           (response 'HsGRPC.Normal
                                              Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.AllocatePartyResponse)}
              deriving Hs.Generic
 
partyManagementServiceServer ::
                               PartyManagementService HsGRPC.ServerRequest HsGRPC.ServerResponse
                                 -> HsGRPC.ServiceOptions -> Hs.IO ()
partyManagementServiceServer
  PartyManagementService{partyManagementServiceGetParticipantId =
                           partyManagementServiceGetParticipantId,
                         partyManagementServiceListKnownParties =
                           partyManagementServiceListKnownParties,
                         partyManagementServiceAllocateParty =
                           partyManagementServiceAllocateParty}
  (ServiceOptions serverHost serverPort useCompression
     userAgentPrefix userAgentSuffix initialMetadata sslConfig logger)
  = (HsGRPC.serverLoop
       HsGRPC.defaultOptions{HsGRPC.optNormalHandlers =
                               [(HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/com.digitalasset.ledger.api.v1.admin.PartyManagementService/GetParticipantId")
                                   (HsGRPC.convertGeneratedServerHandler
                                      partyManagementServiceGetParticipantId)),
                                (HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/com.digitalasset.ledger.api.v1.admin.PartyManagementService/ListKnownParties")
                                   (HsGRPC.convertGeneratedServerHandler
                                      partyManagementServiceListKnownParties)),
                                (HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/com.digitalasset.ledger.api.v1.admin.PartyManagementService/AllocateParty")
                                   (HsGRPC.convertGeneratedServerHandler
                                      partyManagementServiceAllocateParty))],
                             HsGRPC.optClientStreamHandlers = [],
                             HsGRPC.optServerStreamHandlers = [],
                             HsGRPC.optBiDiStreamHandlers = [], optServerHost = serverHost,
                             optServerPort = serverPort, optUseCompression = useCompression,
                             optUserAgentPrefix = userAgentPrefix,
                             optUserAgentSuffix = userAgentSuffix,
                             optInitialMetadata = initialMetadata, optSSLConfig = sslConfig,
                             optLogger = logger})
 
partyManagementServiceClient ::
                               HsGRPC.Client ->
                                 Hs.IO
                                   (PartyManagementService HsGRPC.ClientRequest HsGRPC.ClientResult)
partyManagementServiceClient client
  = (Hs.pure PartyManagementService) <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/com.digitalasset.ledger.api.v1.admin.PartyManagementService/GetParticipantId")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/com.digitalasset.ledger.api.v1.admin.PartyManagementService/ListKnownParties")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/com.digitalasset.ledger.api.v1.admin.PartyManagementService/AllocateParty")))
 
data GetParticipantIdRequest = GetParticipantIdRequest{}
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named GetParticipantIdRequest where
        nameOf _ = (Hs.fromString "GetParticipantIdRequest")
 
instance HsProtobuf.HasDefault GetParticipantIdRequest
 
instance HsProtobuf.Message GetParticipantIdRequest where
        encodeMessage _ GetParticipantIdRequest{} = (Hs.mconcat [])
        decodeMessage _ = (Hs.pure GetParticipantIdRequest)
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB GetParticipantIdRequest where
        toJSONPB (GetParticipantIdRequest) = (HsJSONPB.object [])
        toEncodingPB (GetParticipantIdRequest) = (HsJSONPB.pairs [])
 
instance HsJSONPB.FromJSONPB GetParticipantIdRequest where
        parseJSONPB
          = (HsJSONPB.withObject "GetParticipantIdRequest"
               (\ obj -> (Hs.pure GetParticipantIdRequest)))
 
instance HsJSONPB.ToJSON GetParticipantIdRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON GetParticipantIdRequest where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema GetParticipantIdRequest where
        declareNamedSchema _
          = do Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetParticipantIdRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList []}})
 
data GetParticipantIdResponse = GetParticipantIdResponse{getParticipantIdResponseParticipantId
                                                         :: Hs.Text}
                              deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named GetParticipantIdResponse where
        nameOf _ = (Hs.fromString "GetParticipantIdResponse")
 
instance HsProtobuf.HasDefault GetParticipantIdResponse
 
instance HsProtobuf.Message GetParticipantIdResponse where
        encodeMessage _
          GetParticipantIdResponse{getParticipantIdResponseParticipantId =
                                     getParticipantIdResponseParticipantId}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   getParticipantIdResponseParticipantId)])
        decodeMessage _
          = (Hs.pure GetParticipantIdResponse) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "participant_id")
                []
                "")]
 
instance HsJSONPB.ToJSONPB GetParticipantIdResponse where
        toJSONPB (GetParticipantIdResponse f1)
          = (HsJSONPB.object ["participant_id" .= f1])
        toEncodingPB (GetParticipantIdResponse f1)
          = (HsJSONPB.pairs ["participant_id" .= f1])
 
instance HsJSONPB.FromJSONPB GetParticipantIdResponse where
        parseJSONPB
          = (HsJSONPB.withObject "GetParticipantIdResponse"
               (\ obj ->
                  (Hs.pure GetParticipantIdResponse) <*> obj .: "participant_id"))
 
instance HsJSONPB.ToJSON GetParticipantIdResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON GetParticipantIdResponse where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema GetParticipantIdResponse where
        declareNamedSchema _
          = do let declare_participant_id = HsJSONPB.declareSchemaRef
               getParticipantIdResponseParticipantId <- declare_participant_id
                                                          Proxy.Proxy
               let _ = Hs.pure GetParticipantIdResponse <*>
                         HsJSONPB.asProxy declare_participant_id
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "GetParticipantIdResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("participant_id",
                                                         getParticipantIdResponseParticipantId)]}})
 
data ListKnownPartiesRequest = ListKnownPartiesRequest{}
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ListKnownPartiesRequest where
        nameOf _ = (Hs.fromString "ListKnownPartiesRequest")
 
instance HsProtobuf.HasDefault ListKnownPartiesRequest
 
instance HsProtobuf.Message ListKnownPartiesRequest where
        encodeMessage _ ListKnownPartiesRequest{} = (Hs.mconcat [])
        decodeMessage _ = (Hs.pure ListKnownPartiesRequest)
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB ListKnownPartiesRequest where
        toJSONPB (ListKnownPartiesRequest) = (HsJSONPB.object [])
        toEncodingPB (ListKnownPartiesRequest) = (HsJSONPB.pairs [])
 
instance HsJSONPB.FromJSONPB ListKnownPartiesRequest where
        parseJSONPB
          = (HsJSONPB.withObject "ListKnownPartiesRequest"
               (\ obj -> (Hs.pure ListKnownPartiesRequest)))
 
instance HsJSONPB.ToJSON ListKnownPartiesRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ListKnownPartiesRequest where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ListKnownPartiesRequest where
        declareNamedSchema _
          = do Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ListKnownPartiesRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList []}})
 
data ListKnownPartiesResponse = ListKnownPartiesResponse{listKnownPartiesResponsePartyDetails
                                                         ::
                                                         Hs.Vector
                                                           Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails}
                              deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ListKnownPartiesResponse where
        nameOf _ = (Hs.fromString "ListKnownPartiesResponse")
 
instance HsProtobuf.HasDefault ListKnownPartiesResponse
 
instance HsProtobuf.Message ListKnownPartiesResponse where
        encodeMessage _
          ListKnownPartiesResponse{listKnownPartiesResponsePartyDetails =
                                     listKnownPartiesResponsePartyDetails}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Vector Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails)
                      @(HsProtobuf.NestedVec Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails)
                      listKnownPartiesResponsePartyDetails))])
        decodeMessage _
          = (Hs.pure ListKnownPartiesResponse) <*>
              (Hs.coerce
                 @(_ (HsProtobuf.NestedVec Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails))
                 @(_ (Hs.Vector Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Repeated
                   (HsProtobuf.Named (HsProtobuf.Single "PartyDetails")))
                (HsProtobuf.Single "party_details")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ListKnownPartiesResponse where
        toJSONPB (ListKnownPartiesResponse f1)
          = (HsJSONPB.object ["party_details" .= f1])
        toEncodingPB (ListKnownPartiesResponse f1)
          = (HsJSONPB.pairs ["party_details" .= f1])
 
instance HsJSONPB.FromJSONPB ListKnownPartiesResponse where
        parseJSONPB
          = (HsJSONPB.withObject "ListKnownPartiesResponse"
               (\ obj ->
                  (Hs.pure ListKnownPartiesResponse) <*> obj .: "party_details"))
 
instance HsJSONPB.ToJSON ListKnownPartiesResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ListKnownPartiesResponse where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ListKnownPartiesResponse where
        declareNamedSchema _
          = do let declare_party_details = HsJSONPB.declareSchemaRef
               listKnownPartiesResponsePartyDetails <- declare_party_details
                                                         Proxy.Proxy
               let _ = Hs.pure ListKnownPartiesResponse <*>
                         HsJSONPB.asProxy declare_party_details
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ListKnownPartiesResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("party_details",
                                                         listKnownPartiesResponsePartyDetails)]}})
 
data PartyDetails = PartyDetails{partyDetailsParty :: Hs.Text,
                                 partyDetailsDisplayName :: Hs.Text, partyDetailsIsLocal :: Hs.Bool}
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named PartyDetails where
        nameOf _ = (Hs.fromString "PartyDetails")
 
instance HsProtobuf.HasDefault PartyDetails
 
instance HsProtobuf.Message PartyDetails where
        encodeMessage _
          PartyDetails{partyDetailsParty = partyDetailsParty,
                       partyDetailsDisplayName = partyDetailsDisplayName,
                       partyDetailsIsLocal = partyDetailsIsLocal}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   partyDetailsParty),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   partyDetailsDisplayName),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   partyDetailsIsLocal)])
        decodeMessage _
          = (Hs.pure PartyDetails) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "party")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "display_name")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "is_local")
                []
                "")]
 
instance HsJSONPB.ToJSONPB PartyDetails where
        toJSONPB (PartyDetails f1 f2 f3)
          = (HsJSONPB.object
               ["party" .= f1, "display_name" .= f2, "is_local" .= f3])
        toEncodingPB (PartyDetails f1 f2 f3)
          = (HsJSONPB.pairs
               ["party" .= f1, "display_name" .= f2, "is_local" .= f3])
 
instance HsJSONPB.FromJSONPB PartyDetails where
        parseJSONPB
          = (HsJSONPB.withObject "PartyDetails"
               (\ obj ->
                  (Hs.pure PartyDetails) <*> obj .: "party" <*> obj .: "display_name"
                    <*> obj .: "is_local"))
 
instance HsJSONPB.ToJSON PartyDetails where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON PartyDetails where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema PartyDetails where
        declareNamedSchema _
          = do let declare_party = HsJSONPB.declareSchemaRef
               partyDetailsParty <- declare_party Proxy.Proxy
               let declare_display_name = HsJSONPB.declareSchemaRef
               partyDetailsDisplayName <- declare_display_name Proxy.Proxy
               let declare_is_local = HsJSONPB.declareSchemaRef
               partyDetailsIsLocal <- declare_is_local Proxy.Proxy
               let _ = Hs.pure PartyDetails <*> HsJSONPB.asProxy declare_party <*>
                         HsJSONPB.asProxy declare_display_name
                         <*> HsJSONPB.asProxy declare_is_local
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "PartyDetails",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("party", partyDetailsParty),
                                                        ("display_name", partyDetailsDisplayName),
                                                        ("is_local", partyDetailsIsLocal)]}})
 
data AllocatePartyRequest = AllocatePartyRequest{allocatePartyRequestPartyIdHint
                                                 :: Hs.Text,
                                                 allocatePartyRequestDisplayName :: Hs.Text}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named AllocatePartyRequest where
        nameOf _ = (Hs.fromString "AllocatePartyRequest")
 
instance HsProtobuf.HasDefault AllocatePartyRequest
 
instance HsProtobuf.Message AllocatePartyRequest where
        encodeMessage _
          AllocatePartyRequest{allocatePartyRequestPartyIdHint =
                                 allocatePartyRequestPartyIdHint,
                               allocatePartyRequestDisplayName = allocatePartyRequestDisplayName}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   allocatePartyRequestPartyIdHint),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   allocatePartyRequestDisplayName)])
        decodeMessage _
          = (Hs.pure AllocatePartyRequest) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "party_id_hint")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "display_name")
                []
                "")]
 
instance HsJSONPB.ToJSONPB AllocatePartyRequest where
        toJSONPB (AllocatePartyRequest f1 f2)
          = (HsJSONPB.object ["party_id_hint" .= f1, "display_name" .= f2])
        toEncodingPB (AllocatePartyRequest f1 f2)
          = (HsJSONPB.pairs ["party_id_hint" .= f1, "display_name" .= f2])
 
instance HsJSONPB.FromJSONPB AllocatePartyRequest where
        parseJSONPB
          = (HsJSONPB.withObject "AllocatePartyRequest"
               (\ obj ->
                  (Hs.pure AllocatePartyRequest) <*> obj .: "party_id_hint" <*>
                    obj .: "display_name"))
 
instance HsJSONPB.ToJSON AllocatePartyRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON AllocatePartyRequest where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema AllocatePartyRequest where
        declareNamedSchema _
          = do let declare_party_id_hint = HsJSONPB.declareSchemaRef
               allocatePartyRequestPartyIdHint <- declare_party_id_hint
                                                    Proxy.Proxy
               let declare_display_name = HsJSONPB.declareSchemaRef
               allocatePartyRequestDisplayName <- declare_display_name Proxy.Proxy
               let _ = Hs.pure AllocatePartyRequest <*>
                         HsJSONPB.asProxy declare_party_id_hint
                         <*> HsJSONPB.asProxy declare_display_name
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "AllocatePartyRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("party_id_hint",
                                                         allocatePartyRequestPartyIdHint),
                                                        ("display_name",
                                                         allocatePartyRequestDisplayName)]}})
 
data AllocatePartyResponse = AllocatePartyResponse{allocatePartyResponsePartyDetails
                                                   ::
                                                   Hs.Maybe
                                                     Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails}
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named AllocatePartyResponse where
        nameOf _ = (Hs.fromString "AllocatePartyResponse")
 
instance HsProtobuf.HasDefault AllocatePartyResponse
 
instance HsProtobuf.Message AllocatePartyResponse where
        encodeMessage _
          AllocatePartyResponse{allocatePartyResponsePartyDetails =
                                  allocatePartyResponsePartyDetails}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails)
                      allocatePartyResponsePartyDetails))])
        decodeMessage _
          = (Hs.pure AllocatePartyResponse) <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Admin.PartyManagementService.PartyDetails))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "PartyDetails")))
                (HsProtobuf.Single "party_details")
                []
                "")]
 
instance HsJSONPB.ToJSONPB AllocatePartyResponse where
        toJSONPB (AllocatePartyResponse f1)
          = (HsJSONPB.object ["party_details" .= f1])
        toEncodingPB (AllocatePartyResponse f1)
          = (HsJSONPB.pairs ["party_details" .= f1])
 
instance HsJSONPB.FromJSONPB AllocatePartyResponse where
        parseJSONPB
          = (HsJSONPB.withObject "AllocatePartyResponse"
               (\ obj ->
                  (Hs.pure AllocatePartyResponse) <*> obj .: "party_details"))
 
instance HsJSONPB.ToJSON AllocatePartyResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON AllocatePartyResponse where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema AllocatePartyResponse where
        declareNamedSchema _
          = do let declare_party_details = HsJSONPB.declareSchemaRef
               allocatePartyResponsePartyDetails <- declare_party_details
                                                      Proxy.Proxy
               let _ = Hs.pure AllocatePartyResponse <*>
                         HsJSONPB.asProxy declare_party_details
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "AllocatePartyResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("party_details",
                                                         allocatePartyResponsePartyDetails)]}})