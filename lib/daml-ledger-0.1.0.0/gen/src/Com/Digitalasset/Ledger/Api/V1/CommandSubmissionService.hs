{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Com.Digitalasset.Ledger.Api.V1.CommandSubmissionService
       where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
       (serverLoop)
import qualified Com.Digitalasset.Ledger.Api.V1.Commands
import qualified Google.Protobuf.Empty
import qualified Com.Digitalasset.Ledger.Api.V1.TraceContext
 
data CommandSubmissionService request
     response = CommandSubmissionService{commandSubmissionServiceSubmit
                                         ::
                                         request 'HsGRPC.Normal
                                           Com.Digitalasset.Ledger.Api.V1.CommandSubmissionService.SubmitRequest
                                           Google.Protobuf.Empty.Empty
                                           ->
                                           Hs.IO
                                             (response 'HsGRPC.Normal Google.Protobuf.Empty.Empty)}
              deriving Hs.Generic
 
commandSubmissionServiceServer ::
                                 CommandSubmissionService HsGRPC.ServerRequest HsGRPC.ServerResponse
                                   -> HsGRPC.ServiceOptions -> Hs.IO ()
commandSubmissionServiceServer
  CommandSubmissionService{commandSubmissionServiceSubmit =
                             commandSubmissionServiceSubmit}
  (ServiceOptions serverHost serverPort useCompression
     userAgentPrefix userAgentSuffix initialMetadata sslConfig logger)
  = (HsGRPC.serverLoop
       HsGRPC.defaultOptions{HsGRPC.optNormalHandlers =
                               [(HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/com.digitalasset.ledger.api.v1.CommandSubmissionService/Submit")
                                   (HsGRPC.convertGeneratedServerHandler
                                      commandSubmissionServiceSubmit))],
                             HsGRPC.optClientStreamHandlers = [],
                             HsGRPC.optServerStreamHandlers = [],
                             HsGRPC.optBiDiStreamHandlers = [], optServerHost = serverHost,
                             optServerPort = serverPort, optUseCompression = useCompression,
                             optUserAgentPrefix = userAgentPrefix,
                             optUserAgentSuffix = userAgentSuffix,
                             optInitialMetadata = initialMetadata, optSSLConfig = sslConfig,
                             optLogger = logger})
 
commandSubmissionServiceClient ::
                                 HsGRPC.Client ->
                                   Hs.IO
                                     (CommandSubmissionService HsGRPC.ClientRequest
                                        HsGRPC.ClientResult)
commandSubmissionServiceClient client
  = (Hs.pure CommandSubmissionService) <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/com.digitalasset.ledger.api.v1.CommandSubmissionService/Submit")))
 
data SubmitRequest = SubmitRequest{submitRequestCommands ::
                                   Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Commands.Commands,
                                   submitRequestTraceContext ::
                                   Hs.Maybe
                                     Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext}
                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named SubmitRequest where
        nameOf _ = (Hs.fromString "SubmitRequest")
 
instance HsProtobuf.HasDefault SubmitRequest
 
instance HsProtobuf.Message SubmitRequest where
        encodeMessage _
          SubmitRequest{submitRequestCommands = submitRequestCommands,
                        submitRequestTraceContext = submitRequestTraceContext}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Commands.Commands)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Commands.Commands)
                      submitRequestCommands)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1000)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext)
                      submitRequestTraceContext))])
        decodeMessage _
          = (Hs.pure SubmitRequest) <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Commands.Commands))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Commands.Commands))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1000)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Commands")))
                (HsProtobuf.Single "commands")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1000)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "TraceContext")))
                (HsProtobuf.Single "trace_context")
                []
                "")]
 
instance HsJSONPB.ToJSONPB SubmitRequest where
        toJSONPB (SubmitRequest f1 f1000)
          = (HsJSONPB.object ["commands" .= f1, "trace_context" .= f1000])
        toEncodingPB (SubmitRequest f1 f1000)
          = (HsJSONPB.pairs ["commands" .= f1, "trace_context" .= f1000])
 
instance HsJSONPB.FromJSONPB SubmitRequest where
        parseJSONPB
          = (HsJSONPB.withObject "SubmitRequest"
               (\ obj ->
                  (Hs.pure SubmitRequest) <*> obj .: "commands" <*>
                    obj .: "trace_context"))
 
instance HsJSONPB.ToJSON SubmitRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON SubmitRequest where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema SubmitRequest where
        declareNamedSchema _
          = do let declare_commands = HsJSONPB.declareSchemaRef
               submitRequestCommands <- declare_commands Proxy.Proxy
               let declare_trace_context = HsJSONPB.declareSchemaRef
               submitRequestTraceContext <- declare_trace_context Proxy.Proxy
               let _ = Hs.pure SubmitRequest <*> HsJSONPB.asProxy declare_commands
                         <*> HsJSONPB.asProxy declare_trace_context
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "SubmitRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("commands", submitRequestCommands),
                                                        ("trace_context",
                                                         submitRequestTraceContext)]}})