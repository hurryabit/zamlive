{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Com.Digitalasset.Ledger.Api.V1.TraceContext where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import qualified Google.Protobuf.Wrappers
 
data TraceContext = TraceContext{traceContextTraceIdHigh ::
                                 Hs.Word64,
                                 traceContextTraceId :: Hs.Word64, traceContextSpanId :: Hs.Word64,
                                 traceContextParentSpanId ::
                                 Hs.Maybe Google.Protobuf.Wrappers.UInt64Value,
                                 traceContextSampled :: Hs.Bool}
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named TraceContext where
        nameOf _ = (Hs.fromString "TraceContext")
 
instance HsProtobuf.HasDefault TraceContext
 
instance HsProtobuf.Message TraceContext where
        encodeMessage _
          TraceContext{traceContextTraceIdHigh = traceContextTraceIdHigh,
                       traceContextTraceId = traceContextTraceId,
                       traceContextSpanId = traceContextSpanId,
                       traceContextParentSpanId = traceContextParentSpanId,
                       traceContextSampled = traceContextSampled}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   traceContextTraceIdHigh),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   traceContextTraceId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   traceContextSpanId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Wrappers.UInt64Value)
                      @(HsProtobuf.Nested Google.Protobuf.Wrappers.UInt64Value)
                      traceContextParentSpanId)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   traceContextSampled)])
        decodeMessage _
          = (Hs.pure TraceContext) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 3))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Google.Protobuf.Wrappers.UInt64Value))
                 @(_ (Hs.Maybe Google.Protobuf.Wrappers.UInt64Value))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 5))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.UInt64)
                (HsProtobuf.Single "trace_id_high")
                [(HsProtobuf.DotProtoOption (HsProtobuf.Single "jstype")
                    (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING")))]
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.UInt64)
                (HsProtobuf.Single "trace_id")
                [(HsProtobuf.DotProtoOption (HsProtobuf.Single "jstype")
                    (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING")))]
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim HsProtobuf.UInt64)
                (HsProtobuf.Single "span_id")
                [(HsProtobuf.DotProtoOption (HsProtobuf.Single "jstype")
                    (HsProtobuf.Identifier (HsProtobuf.Single "JS_STRING")))]
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "UInt64Value"])))))
                (HsProtobuf.Single "parent_span_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "sampled")
                []
                "")]
 
instance HsJSONPB.ToJSONPB TraceContext where
        toJSONPB (TraceContext f1 f2 f3 f4 f5)
          = (HsJSONPB.object
               ["trace_id_high" .= f1, "trace_id" .= f2, "span_id" .= f3,
                "parent_span_id" .= f4, "sampled" .= f5])
        toEncodingPB (TraceContext f1 f2 f3 f4 f5)
          = (HsJSONPB.pairs
               ["trace_id_high" .= f1, "trace_id" .= f2, "span_id" .= f3,
                "parent_span_id" .= f4, "sampled" .= f5])
 
instance HsJSONPB.FromJSONPB TraceContext where
        parseJSONPB
          = (HsJSONPB.withObject "TraceContext"
               (\ obj ->
                  (Hs.pure TraceContext) <*> obj .: "trace_id_high" <*>
                    obj .: "trace_id"
                    <*> obj .: "span_id"
                    <*> obj .: "parent_span_id"
                    <*> obj .: "sampled"))
 
instance HsJSONPB.ToJSON TraceContext where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON TraceContext where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema TraceContext where
        declareNamedSchema _
          = do let declare_trace_id_high = HsJSONPB.declareSchemaRef
               traceContextTraceIdHigh <- declare_trace_id_high Proxy.Proxy
               let declare_trace_id = HsJSONPB.declareSchemaRef
               traceContextTraceId <- declare_trace_id Proxy.Proxy
               let declare_span_id = HsJSONPB.declareSchemaRef
               traceContextSpanId <- declare_span_id Proxy.Proxy
               let declare_parent_span_id = HsJSONPB.declareSchemaRef
               traceContextParentSpanId <- declare_parent_span_id Proxy.Proxy
               let declare_sampled = HsJSONPB.declareSchemaRef
               traceContextSampled <- declare_sampled Proxy.Proxy
               let _ = Hs.pure TraceContext <*>
                         HsJSONPB.asProxy declare_trace_id_high
                         <*> HsJSONPB.asProxy declare_trace_id
                         <*> HsJSONPB.asProxy declare_span_id
                         <*> HsJSONPB.asProxy declare_parent_span_id
                         <*> HsJSONPB.asProxy declare_sampled
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "TraceContext",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("trace_id_high", traceContextTraceIdHigh),
                                                        ("trace_id", traceContextTraceId),
                                                        ("span_id", traceContextSpanId),
                                                        ("parent_span_id",
                                                         traceContextParentSpanId),
                                                        ("sampled", traceContextSampled)]}})