{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Com.Digitalasset.Ledger.Api.V1.Event where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import qualified Google.Protobuf.Wrappers
import qualified Com.Digitalasset.Ledger.Api.V1.Value
 
data Event = Event{eventEvent :: Hs.Maybe EventEvent}
           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named Event where
        nameOf _ = (Hs.fromString "Event")
 
instance HsProtobuf.HasDefault Event
 
instance HsProtobuf.Message Event where
        encodeMessage _ Event{eventEvent = eventEvent}
          = (Hs.mconcat
               [case eventEvent of
                    Hs.Nothing -> Hs.mempty
                    Hs.Just x
                      -> case x of
                             EventEventCreated y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                                     (Hs.coerce
                                        @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Event.CreatedEvent)
                                        @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Event.CreatedEvent)
                                        (Hs.Just y)))
                             EventEventArchived y
                               -> (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                                     (Hs.coerce
                                        @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Event.ArchivedEvent)
                                        @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Event.ArchivedEvent)
                                        (Hs.Just y)))])
        decodeMessage _
          = (Hs.pure Event) <*>
              (HsProtobuf.oneof Hs.Nothing
                 [((HsProtobuf.FieldNumber 1),
                   (Hs.pure (Hs.fmap EventEventCreated)) <*>
                     (Hs.coerce
                        @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Event.CreatedEvent))
                        @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Event.CreatedEvent))
                        HsProtobuf.decodeMessageField)),
                  ((HsProtobuf.FieldNumber 3),
                   (Hs.pure (Hs.fmap EventEventArchived)) <*>
                     (Hs.coerce
                        @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Event.ArchivedEvent))
                        @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Event.ArchivedEvent))
                        HsProtobuf.decodeMessageField))])
        dotProto _ = []
 
instance HsJSONPB.ToJSONPB Event where
        toJSONPB (Event f1_or_f3)
          = (HsJSONPB.object
               [(let encodeEvent
                       = (case f1_or_f3 of
                              Hs.Just (EventEventCreated f1) -> (HsJSONPB.pair "created" f1)
                              Hs.Just (EventEventArchived f3) -> (HsJSONPB.pair "archived" f3)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("event" .= (HsJSONPB.objectOrNull [encodeEvent] options)) options
                       else encodeEvent options)])
        toEncodingPB (Event f1_or_f3)
          = (HsJSONPB.pairs
               [(let encodeEvent
                       = (case f1_or_f3 of
                              Hs.Just (EventEventCreated f1) -> (HsJSONPB.pair "created" f1)
                              Hs.Just (EventEventArchived f3) -> (HsJSONPB.pair "archived" f3)
                              Hs.Nothing -> Hs.mempty)
                   in
                   \ options ->
                     if HsJSONPB.optEmitNamedOneof options then
                       ("event" .= (HsJSONPB.pairsOrNull [encodeEvent] options)) options
                       else encodeEvent options)])
 
instance HsJSONPB.FromJSONPB Event where
        parseJSONPB
          = (HsJSONPB.withObject "Event"
               (\ obj ->
                  (Hs.pure Event) <*>
                    (let parseEvent parseObj
                           = Hs.msum
                               [Hs.Just Hs.. EventEventCreated <$>
                                  (HsJSONPB.parseField parseObj "created"),
                                Hs.Just Hs.. EventEventArchived <$>
                                  (HsJSONPB.parseField parseObj "archived"),
                                Hs.pure Hs.Nothing]
                       in
                       ((obj .: "event") Hs.>>= (HsJSONPB.withObject "event" parseEvent))
                         <|> (parseEvent obj))))
 
instance HsJSONPB.ToJSON Event where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON Event where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema Event where
        declareNamedSchema _
          = do let declare_event = HsJSONPB.declareSchemaRef
               eventEvent <- declare_event Proxy.Proxy
               let _ = Hs.pure Event <*> HsJSONPB.asProxy declare_event
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName = Hs.Just "Event",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("event", eventEvent)]}})
 
data EventEvent = EventEventCreated Com.Digitalasset.Ledger.Api.V1.Event.CreatedEvent
                | EventEventArchived Com.Digitalasset.Ledger.Api.V1.Event.ArchivedEvent
                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named EventEvent where
        nameOf _ = (Hs.fromString "EventEvent")
 
instance HsJSONPB.ToSchema EventEvent where
        declareNamedSchema _
          = do let declare_created = HsJSONPB.declareSchemaRef
               eventEventCreated <- declare_created Proxy.Proxy
               let _ = Hs.pure EventEventCreated <*>
                         HsJSONPB.asProxy declare_created
               let declare_archived = HsJSONPB.declareSchemaRef
               eventEventArchived <- declare_archived Proxy.Proxy
               let _ = Hs.pure EventEventArchived <*>
                         HsJSONPB.asProxy declare_archived
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "EventEvent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("created", eventEventCreated),
                                                        ("archived", eventEventArchived)],
                                                   HsJSONPB._schemaMinProperties = Hs.Just 1,
                                                   HsJSONPB._schemaMaxProperties = Hs.Just 1}})
 
data CreatedEvent = CreatedEvent{createdEventEventId :: Hs.Text,
                                 createdEventContractId :: Hs.Text,
                                 createdEventTemplateId ::
                                 Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier,
                                 createdEventContractKey ::
                                 Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value,
                                 createdEventCreateArguments ::
                                 Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Record,
                                 createdEventWitnessParties :: Hs.Vector Hs.Text,
                                 createdEventSignatories :: Hs.Vector Hs.Text,
                                 createdEventObservers :: Hs.Vector Hs.Text,
                                 createdEventAgreementText ::
                                 Hs.Maybe Google.Protobuf.Wrappers.StringValue}
                  deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CreatedEvent where
        nameOf _ = (Hs.fromString "CreatedEvent")
 
instance HsProtobuf.HasDefault CreatedEvent
 
instance HsProtobuf.Message CreatedEvent where
        encodeMessage _
          CreatedEvent{createdEventEventId = createdEventEventId,
                       createdEventContractId = createdEventContractId,
                       createdEventTemplateId = createdEventTemplateId,
                       createdEventContractKey = createdEventContractKey,
                       createdEventCreateArguments = createdEventCreateArguments,
                       createdEventWitnessParties = createdEventWitnessParties,
                       createdEventSignatories = createdEventSignatories,
                       createdEventObservers = createdEventObservers,
                       createdEventAgreementText = createdEventAgreementText}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   createdEventEventId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   createdEventContractId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Identifier)
                      createdEventTemplateId)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   (Hs.coerce @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Value)
                      createdEventContractKey)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Record)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Record)
                      createdEventCreateArguments)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   (Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                      createdEventWitnessParties)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   (Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                      createdEventSignatories)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 9)
                   (Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                      createdEventObservers)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Wrappers.StringValue)
                      @(HsProtobuf.Nested Google.Protobuf.Wrappers.StringValue)
                      createdEventAgreementText))])
        decodeMessage _
          = (Hs.pure CreatedEvent) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Identifier))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Value))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 7)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Record))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Record))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
                 @(_ (Hs.Vector Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 5)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
                 @(_ (Hs.Vector Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 8)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
                 @(_ (Hs.Vector Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 9)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Google.Protobuf.Wrappers.StringValue))
                 @(_ (Hs.Maybe Google.Protobuf.Wrappers.StringValue))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "event_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "contract_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "Identifier")))
                (HsProtobuf.Single "template_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Value")))
                (HsProtobuf.Single "contract_key")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Record")))
                (HsProtobuf.Single "create_arguments")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Repeated HsProtobuf.String)
                (HsProtobuf.Single "witness_parties")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobuf.Repeated HsProtobuf.String)
                (HsProtobuf.Single "signatories")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 9)
                (HsProtobuf.Repeated HsProtobuf.String)
                (HsProtobuf.Single "observers")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "StringValue"])))))
                (HsProtobuf.Single "agreement_text")
                []
                "")]
 
instance HsJSONPB.ToJSONPB CreatedEvent where
        toJSONPB (CreatedEvent f1 f2 f3 f7 f4 f5 f8 f9 f6)
          = (HsJSONPB.object
               ["event_id" .= f1, "contract_id" .= f2, "template_id" .= f3,
                "contract_key" .= f7, "create_arguments" .= f4,
                "witness_parties" .= f5, "signatories" .= f8, "observers" .= f9,
                "agreement_text" .= f6])
        toEncodingPB (CreatedEvent f1 f2 f3 f7 f4 f5 f8 f9 f6)
          = (HsJSONPB.pairs
               ["event_id" .= f1, "contract_id" .= f2, "template_id" .= f3,
                "contract_key" .= f7, "create_arguments" .= f4,
                "witness_parties" .= f5, "signatories" .= f8, "observers" .= f9,
                "agreement_text" .= f6])
 
instance HsJSONPB.FromJSONPB CreatedEvent where
        parseJSONPB
          = (HsJSONPB.withObject "CreatedEvent"
               (\ obj ->
                  (Hs.pure CreatedEvent) <*> obj .: "event_id" <*>
                    obj .: "contract_id"
                    <*> obj .: "template_id"
                    <*> obj .: "contract_key"
                    <*> obj .: "create_arguments"
                    <*> obj .: "witness_parties"
                    <*> obj .: "signatories"
                    <*> obj .: "observers"
                    <*> obj .: "agreement_text"))
 
instance HsJSONPB.ToJSON CreatedEvent where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CreatedEvent where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CreatedEvent where
        declareNamedSchema _
          = do let declare_event_id = HsJSONPB.declareSchemaRef
               createdEventEventId <- declare_event_id Proxy.Proxy
               let declare_contract_id = HsJSONPB.declareSchemaRef
               createdEventContractId <- declare_contract_id Proxy.Proxy
               let declare_template_id = HsJSONPB.declareSchemaRef
               createdEventTemplateId <- declare_template_id Proxy.Proxy
               let declare_contract_key = HsJSONPB.declareSchemaRef
               createdEventContractKey <- declare_contract_key Proxy.Proxy
               let declare_create_arguments = HsJSONPB.declareSchemaRef
               createdEventCreateArguments <- declare_create_arguments Proxy.Proxy
               let declare_witness_parties = HsJSONPB.declareSchemaRef
               createdEventWitnessParties <- declare_witness_parties Proxy.Proxy
               let declare_signatories = HsJSONPB.declareSchemaRef
               createdEventSignatories <- declare_signatories Proxy.Proxy
               let declare_observers = HsJSONPB.declareSchemaRef
               createdEventObservers <- declare_observers Proxy.Proxy
               let declare_agreement_text = HsJSONPB.declareSchemaRef
               createdEventAgreementText <- declare_agreement_text Proxy.Proxy
               let _ = Hs.pure CreatedEvent <*> HsJSONPB.asProxy declare_event_id
                         <*> HsJSONPB.asProxy declare_contract_id
                         <*> HsJSONPB.asProxy declare_template_id
                         <*> HsJSONPB.asProxy declare_contract_key
                         <*> HsJSONPB.asProxy declare_create_arguments
                         <*> HsJSONPB.asProxy declare_witness_parties
                         <*> HsJSONPB.asProxy declare_signatories
                         <*> HsJSONPB.asProxy declare_observers
                         <*> HsJSONPB.asProxy declare_agreement_text
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CreatedEvent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("event_id", createdEventEventId),
                                                        ("contract_id", createdEventContractId),
                                                        ("template_id", createdEventTemplateId),
                                                        ("contract_key", createdEventContractKey),
                                                        ("create_arguments",
                                                         createdEventCreateArguments),
                                                        ("witness_parties",
                                                         createdEventWitnessParties),
                                                        ("signatories", createdEventSignatories),
                                                        ("observers", createdEventObservers),
                                                        ("agreement_text",
                                                         createdEventAgreementText)]}})
 
data ArchivedEvent = ArchivedEvent{archivedEventEventId :: Hs.Text,
                                   archivedEventContractId :: Hs.Text,
                                   archivedEventTemplateId ::
                                   Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier,
                                   archivedEventWitnessParties :: Hs.Vector Hs.Text}
                   deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ArchivedEvent where
        nameOf _ = (Hs.fromString "ArchivedEvent")
 
instance HsProtobuf.HasDefault ArchivedEvent
 
instance HsProtobuf.Message ArchivedEvent where
        encodeMessage _
          ArchivedEvent{archivedEventEventId = archivedEventEventId,
                        archivedEventContractId = archivedEventContractId,
                        archivedEventTemplateId = archivedEventTemplateId,
                        archivedEventWitnessParties = archivedEventWitnessParties}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   archivedEventEventId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   archivedEventContractId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Identifier)
                      archivedEventTemplateId)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                      archivedEventWitnessParties))])
        decodeMessage _
          = (Hs.pure ArchivedEvent) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Identifier))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
                 @(_ (Hs.Vector Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "event_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "contract_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "Identifier")))
                (HsProtobuf.Single "template_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Repeated HsProtobuf.String)
                (HsProtobuf.Single "witness_parties")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ArchivedEvent where
        toJSONPB (ArchivedEvent f1 f2 f3 f4)
          = (HsJSONPB.object
               ["event_id" .= f1, "contract_id" .= f2, "template_id" .= f3,
                "witness_parties" .= f4])
        toEncodingPB (ArchivedEvent f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["event_id" .= f1, "contract_id" .= f2, "template_id" .= f3,
                "witness_parties" .= f4])
 
instance HsJSONPB.FromJSONPB ArchivedEvent where
        parseJSONPB
          = (HsJSONPB.withObject "ArchivedEvent"
               (\ obj ->
                  (Hs.pure ArchivedEvent) <*> obj .: "event_id" <*>
                    obj .: "contract_id"
                    <*> obj .: "template_id"
                    <*> obj .: "witness_parties"))
 
instance HsJSONPB.ToJSON ArchivedEvent where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ArchivedEvent where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ArchivedEvent where
        declareNamedSchema _
          = do let declare_event_id = HsJSONPB.declareSchemaRef
               archivedEventEventId <- declare_event_id Proxy.Proxy
               let declare_contract_id = HsJSONPB.declareSchemaRef
               archivedEventContractId <- declare_contract_id Proxy.Proxy
               let declare_template_id = HsJSONPB.declareSchemaRef
               archivedEventTemplateId <- declare_template_id Proxy.Proxy
               let declare_witness_parties = HsJSONPB.declareSchemaRef
               archivedEventWitnessParties <- declare_witness_parties Proxy.Proxy
               let _ = Hs.pure ArchivedEvent <*> HsJSONPB.asProxy declare_event_id
                         <*> HsJSONPB.asProxy declare_contract_id
                         <*> HsJSONPB.asProxy declare_template_id
                         <*> HsJSONPB.asProxy declare_witness_parties
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ArchivedEvent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("event_id", archivedEventEventId),
                                                        ("contract_id", archivedEventContractId),
                                                        ("template_id", archivedEventTemplateId),
                                                        ("witness_parties",
                                                         archivedEventWitnessParties)]}})
 
data ExercisedEvent = ExercisedEvent{exercisedEventEventId ::
                                     Hs.Text,
                                     exercisedEventContractId :: Hs.Text,
                                     exercisedEventTemplateId ::
                                     Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier,
                                     exercisedEventChoice :: Hs.Text,
                                     exercisedEventChoiceArgument ::
                                     Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value,
                                     exercisedEventActingParties :: Hs.Vector Hs.Text,
                                     exercisedEventConsuming :: Hs.Bool,
                                     exercisedEventWitnessParties :: Hs.Vector Hs.Text,
                                     exercisedEventChildEventIds :: Hs.Vector Hs.Text,
                                     exercisedEventExerciseResult ::
                                     Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value}
                    deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named ExercisedEvent where
        nameOf _ = (Hs.fromString "ExercisedEvent")
 
instance HsProtobuf.HasDefault ExercisedEvent
 
instance HsProtobuf.Message ExercisedEvent where
        encodeMessage _
          ExercisedEvent{exercisedEventEventId = exercisedEventEventId,
                         exercisedEventContractId = exercisedEventContractId,
                         exercisedEventTemplateId = exercisedEventTemplateId,
                         exercisedEventChoice = exercisedEventChoice,
                         exercisedEventChoiceArgument = exercisedEventChoiceArgument,
                         exercisedEventActingParties = exercisedEventActingParties,
                         exercisedEventConsuming = exercisedEventConsuming,
                         exercisedEventWitnessParties = exercisedEventWitnessParties,
                         exercisedEventChildEventIds = exercisedEventChildEventIds,
                         exercisedEventExerciseResult = exercisedEventExerciseResult}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   exercisedEventEventId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   exercisedEventContractId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Identifier)
                      exercisedEventTemplateId)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 5)
                   exercisedEventChoice),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 6)
                   (Hs.coerce @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Value)
                      exercisedEventChoiceArgument)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 7)
                   (Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                      exercisedEventActingParties)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 8)
                   exercisedEventConsuming),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 10)
                   (Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                      exercisedEventWitnessParties)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 11)
                   (Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                      exercisedEventChildEventIds)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 12)
                   (Hs.coerce @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Value)
                      exercisedEventExerciseResult))])
        decodeMessage _
          = (Hs.pure ExercisedEvent) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Identifier))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Identifier))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 5))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Value))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 6)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
                 @(_ (Hs.Vector Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 7)))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 8))
              <*>
              (Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
                 @(_ (Hs.Vector Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 10)))
              <*>
              (Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
                 @(_ (Hs.Vector Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 11)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.Value.Value))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.Value.Value))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 12)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "event_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "contract_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "Identifier")))
                (HsProtobuf.Single "template_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 5)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "choice")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 6)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Value")))
                (HsProtobuf.Single "choice_argument")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 7)
                (HsProtobuf.Repeated HsProtobuf.String)
                (HsProtobuf.Single "acting_parties")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 8)
                (HsProtobuf.Prim HsProtobuf.Bool)
                (HsProtobuf.Single "consuming")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 10)
                (HsProtobuf.Repeated HsProtobuf.String)
                (HsProtobuf.Single "witness_parties")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 11)
                (HsProtobuf.Repeated HsProtobuf.String)
                (HsProtobuf.Single "child_event_ids")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 12)
                (HsProtobuf.Prim (HsProtobuf.Named (HsProtobuf.Single "Value")))
                (HsProtobuf.Single "exercise_result")
                []
                "")]
 
instance HsJSONPB.ToJSONPB ExercisedEvent where
        toJSONPB (ExercisedEvent f1 f2 f3 f5 f6 f7 f8 f10 f11 f12)
          = (HsJSONPB.object
               ["event_id" .= f1, "contract_id" .= f2, "template_id" .= f3,
                "choice" .= f5, "choice_argument" .= f6, "acting_parties" .= f7,
                "consuming" .= f8, "witness_parties" .= f10,
                "child_event_ids" .= f11, "exercise_result" .= f12])
        toEncodingPB (ExercisedEvent f1 f2 f3 f5 f6 f7 f8 f10 f11 f12)
          = (HsJSONPB.pairs
               ["event_id" .= f1, "contract_id" .= f2, "template_id" .= f3,
                "choice" .= f5, "choice_argument" .= f6, "acting_parties" .= f7,
                "consuming" .= f8, "witness_parties" .= f10,
                "child_event_ids" .= f11, "exercise_result" .= f12])
 
instance HsJSONPB.FromJSONPB ExercisedEvent where
        parseJSONPB
          = (HsJSONPB.withObject "ExercisedEvent"
               (\ obj ->
                  (Hs.pure ExercisedEvent) <*> obj .: "event_id" <*>
                    obj .: "contract_id"
                    <*> obj .: "template_id"
                    <*> obj .: "choice"
                    <*> obj .: "choice_argument"
                    <*> obj .: "acting_parties"
                    <*> obj .: "consuming"
                    <*> obj .: "witness_parties"
                    <*> obj .: "child_event_ids"
                    <*> obj .: "exercise_result"))
 
instance HsJSONPB.ToJSON ExercisedEvent where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON ExercisedEvent where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema ExercisedEvent where
        declareNamedSchema _
          = do let declare_event_id = HsJSONPB.declareSchemaRef
               exercisedEventEventId <- declare_event_id Proxy.Proxy
               let declare_contract_id = HsJSONPB.declareSchemaRef
               exercisedEventContractId <- declare_contract_id Proxy.Proxy
               let declare_template_id = HsJSONPB.declareSchemaRef
               exercisedEventTemplateId <- declare_template_id Proxy.Proxy
               let declare_choice = HsJSONPB.declareSchemaRef
               exercisedEventChoice <- declare_choice Proxy.Proxy
               let declare_choice_argument = HsJSONPB.declareSchemaRef
               exercisedEventChoiceArgument <- declare_choice_argument Proxy.Proxy
               let declare_acting_parties = HsJSONPB.declareSchemaRef
               exercisedEventActingParties <- declare_acting_parties Proxy.Proxy
               let declare_consuming = HsJSONPB.declareSchemaRef
               exercisedEventConsuming <- declare_consuming Proxy.Proxy
               let declare_witness_parties = HsJSONPB.declareSchemaRef
               exercisedEventWitnessParties <- declare_witness_parties Proxy.Proxy
               let declare_child_event_ids = HsJSONPB.declareSchemaRef
               exercisedEventChildEventIds <- declare_child_event_ids Proxy.Proxy
               let declare_exercise_result = HsJSONPB.declareSchemaRef
               exercisedEventExerciseResult <- declare_exercise_result Proxy.Proxy
               let _ = Hs.pure ExercisedEvent <*>
                         HsJSONPB.asProxy declare_event_id
                         <*> HsJSONPB.asProxy declare_contract_id
                         <*> HsJSONPB.asProxy declare_template_id
                         <*> HsJSONPB.asProxy declare_choice
                         <*> HsJSONPB.asProxy declare_choice_argument
                         <*> HsJSONPB.asProxy declare_acting_parties
                         <*> HsJSONPB.asProxy declare_consuming
                         <*> HsJSONPB.asProxy declare_witness_parties
                         <*> HsJSONPB.asProxy declare_child_event_ids
                         <*> HsJSONPB.asProxy declare_exercise_result
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "ExercisedEvent",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("event_id", exercisedEventEventId),
                                                        ("contract_id", exercisedEventContractId),
                                                        ("template_id", exercisedEventTemplateId),
                                                        ("choice", exercisedEventChoice),
                                                        ("choice_argument",
                                                         exercisedEventChoiceArgument),
                                                        ("acting_parties",
                                                         exercisedEventActingParties),
                                                        ("consuming", exercisedEventConsuming),
                                                        ("witness_parties",
                                                         exercisedEventWitnessParties),
                                                        ("child_event_ids",
                                                         exercisedEventChildEventIds),
                                                        ("exercise_result",
                                                         exercisedEventExerciseResult)]}})