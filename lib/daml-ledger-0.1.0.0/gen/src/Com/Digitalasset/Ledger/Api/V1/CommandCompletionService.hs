{-# LANGUAGE DeriveGeneric     #-}
{-# LANGUAGE DeriveAnyClass    #-}
{-# LANGUAGE DataKinds         #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE TypeApplications  #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- | Generated by Haskell protocol buffer compiler. DO NOT EDIT!
module Com.Digitalasset.Ledger.Api.V1.CommandCompletionService
       where
import qualified Prelude as Hs
import qualified Proto3.Suite.Class as HsProtobuf
import qualified Proto3.Suite.DotProto as HsProtobuf
import qualified Proto3.Suite.JSONPB as HsJSONPB
import Proto3.Suite.JSONPB ((.=), (.:))
import qualified Proto3.Suite.Types as HsProtobuf
import qualified Proto3.Wire as HsProtobuf
import qualified Control.Applicative as Hs
import Control.Applicative ((<*>), (<|>), (<$>))
import qualified Control.DeepSeq as Hs
import qualified Control.Monad as Hs
import qualified Data.ByteString as Hs
import qualified Data.Coerce as Hs
import qualified Data.Int as Hs (Int16, Int32, Int64)
import qualified Data.List.NonEmpty as Hs (NonEmpty(..))
import qualified Data.Map as Hs (Map, mapKeysMonotonic)
import qualified Data.Proxy as Proxy
import qualified Data.String as Hs (fromString)
import qualified Data.Text.Lazy as Hs (Text)
import qualified Data.Vector as Hs (Vector)
import qualified Data.Word as Hs (Word16, Word32, Word64)
import qualified GHC.Enum as Hs
import qualified GHC.Generics as Hs
import qualified Unsafe.Coerce as Hs
import Network.GRPC.HighLevel.Generated as HsGRPC
import Network.GRPC.HighLevel.Client as HsGRPC
import Network.GRPC.HighLevel.Server as HsGRPC hiding (serverLoop)
import Network.GRPC.HighLevel.Server.Unregistered as HsGRPC
       (serverLoop)
import qualified Com.Digitalasset.Ledger.Api.V1.Completion
import qualified Com.Digitalasset.Ledger.Api.V1.LedgerOffset
import qualified Google.Protobuf.Timestamp
import qualified Com.Digitalasset.Ledger.Api.V1.TraceContext
 
data CommandCompletionService request
     response = CommandCompletionService{commandCompletionServiceCompletionStream
                                         ::
                                         request 'HsGRPC.ServerStreaming
                                           Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.CompletionStreamRequest
                                           Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.CompletionStreamResponse
                                           ->
                                           Hs.IO
                                             (response 'HsGRPC.ServerStreaming
                                                Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.CompletionStreamResponse),
                                         commandCompletionServiceCompletionEnd ::
                                         request 'HsGRPC.Normal
                                           Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.CompletionEndRequest
                                           Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.CompletionEndResponse
                                           ->
                                           Hs.IO
                                             (response 'HsGRPC.Normal
                                                Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.CompletionEndResponse)}
              deriving Hs.Generic
 
commandCompletionServiceServer ::
                                 CommandCompletionService HsGRPC.ServerRequest HsGRPC.ServerResponse
                                   -> HsGRPC.ServiceOptions -> Hs.IO ()
commandCompletionServiceServer
  CommandCompletionService{commandCompletionServiceCompletionStream =
                             commandCompletionServiceCompletionStream,
                           commandCompletionServiceCompletionEnd =
                             commandCompletionServiceCompletionEnd}
  (ServiceOptions serverHost serverPort useCompression
     userAgentPrefix userAgentSuffix initialMetadata sslConfig logger)
  = (HsGRPC.serverLoop
       HsGRPC.defaultOptions{HsGRPC.optNormalHandlers =
                               [(HsGRPC.UnaryHandler
                                   (HsGRPC.MethodName
                                      "/com.digitalasset.ledger.api.v1.CommandCompletionService/CompletionEnd")
                                   (HsGRPC.convertGeneratedServerHandler
                                      commandCompletionServiceCompletionEnd))],
                             HsGRPC.optClientStreamHandlers = [],
                             HsGRPC.optServerStreamHandlers =
                               [(HsGRPC.ServerStreamHandler
                                   (HsGRPC.MethodName
                                      "/com.digitalasset.ledger.api.v1.CommandCompletionService/CompletionStream")
                                   (HsGRPC.convertGeneratedServerWriterHandler
                                      commandCompletionServiceCompletionStream))],
                             HsGRPC.optBiDiStreamHandlers = [], optServerHost = serverHost,
                             optServerPort = serverPort, optUseCompression = useCompression,
                             optUserAgentPrefix = userAgentPrefix,
                             optUserAgentSuffix = userAgentSuffix,
                             optInitialMetadata = initialMetadata, optSSLConfig = sslConfig,
                             optLogger = logger})
 
commandCompletionServiceClient ::
                                 HsGRPC.Client ->
                                   Hs.IO
                                     (CommandCompletionService HsGRPC.ClientRequest
                                        HsGRPC.ClientResult)
commandCompletionServiceClient client
  = (Hs.pure CommandCompletionService) <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/com.digitalasset.ledger.api.v1.CommandCompletionService/CompletionStream")))
      <*>
      ((Hs.pure (HsGRPC.clientRequest client)) <*>
         (HsGRPC.clientRegisterMethod client
            (HsGRPC.MethodName
               "/com.digitalasset.ledger.api.v1.CommandCompletionService/CompletionEnd")))
 
data CompletionStreamRequest = CompletionStreamRequest{completionStreamRequestLedgerId
                                                       :: Hs.Text,
                                                       completionStreamRequestApplicationId ::
                                                       Hs.Text,
                                                       completionStreamRequestParties ::
                                                       Hs.Vector Hs.Text,
                                                       completionStreamRequestOffset ::
                                                       Hs.Maybe
                                                         Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset}
                             deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CompletionStreamRequest where
        nameOf _ = (Hs.fromString "CompletionStreamRequest")
 
instance HsProtobuf.HasDefault CompletionStreamRequest
 
instance HsProtobuf.Message CompletionStreamRequest where
        encodeMessage _
          CompletionStreamRequest{completionStreamRequestLedgerId =
                                    completionStreamRequestLedgerId,
                                  completionStreamRequestApplicationId =
                                    completionStreamRequestApplicationId,
                                  completionStreamRequestParties = completionStreamRequestParties,
                                  completionStreamRequestOffset = completionStreamRequestOffset}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   completionStreamRequestLedgerId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   completionStreamRequestApplicationId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 3)
                   (Hs.coerce @(Hs.Vector Hs.Text) @(HsProtobuf.UnpackedVec Hs.Text)
                      completionStreamRequestParties)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 4)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset)
                      completionStreamRequestOffset))])
        decodeMessage _
          = (Hs.pure CompletionStreamRequest) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 2))
              <*>
              (Hs.coerce @(_ (HsProtobuf.UnpackedVec Hs.Text))
                 @(_ (Hs.Vector Hs.Text))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 3)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 4)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "ledger_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "application_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 3)
                (HsProtobuf.Repeated HsProtobuf.String)
                (HsProtobuf.Single "parties")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 4)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "LedgerOffset")))
                (HsProtobuf.Single "offset")
                []
                "")]
 
instance HsJSONPB.ToJSONPB CompletionStreamRequest where
        toJSONPB (CompletionStreamRequest f1 f2 f3 f4)
          = (HsJSONPB.object
               ["ledger_id" .= f1, "application_id" .= f2, "parties" .= f3,
                "offset" .= f4])
        toEncodingPB (CompletionStreamRequest f1 f2 f3 f4)
          = (HsJSONPB.pairs
               ["ledger_id" .= f1, "application_id" .= f2, "parties" .= f3,
                "offset" .= f4])
 
instance HsJSONPB.FromJSONPB CompletionStreamRequest where
        parseJSONPB
          = (HsJSONPB.withObject "CompletionStreamRequest"
               (\ obj ->
                  (Hs.pure CompletionStreamRequest) <*> obj .: "ledger_id" <*>
                    obj .: "application_id"
                    <*> obj .: "parties"
                    <*> obj .: "offset"))
 
instance HsJSONPB.ToJSON CompletionStreamRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CompletionStreamRequest where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CompletionStreamRequest where
        declareNamedSchema _
          = do let declare_ledger_id = HsJSONPB.declareSchemaRef
               completionStreamRequestLedgerId <- declare_ledger_id Proxy.Proxy
               let declare_application_id = HsJSONPB.declareSchemaRef
               completionStreamRequestApplicationId <- declare_application_id
                                                         Proxy.Proxy
               let declare_parties = HsJSONPB.declareSchemaRef
               completionStreamRequestParties <- declare_parties Proxy.Proxy
               let declare_offset = HsJSONPB.declareSchemaRef
               completionStreamRequestOffset <- declare_offset Proxy.Proxy
               let _ = Hs.pure CompletionStreamRequest <*>
                         HsJSONPB.asProxy declare_ledger_id
                         <*> HsJSONPB.asProxy declare_application_id
                         <*> HsJSONPB.asProxy declare_parties
                         <*> HsJSONPB.asProxy declare_offset
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CompletionStreamRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("ledger_id",
                                                         completionStreamRequestLedgerId),
                                                        ("application_id",
                                                         completionStreamRequestApplicationId),
                                                        ("parties", completionStreamRequestParties),
                                                        ("offset",
                                                         completionStreamRequestOffset)]}})
 
data CompletionStreamResponse = CompletionStreamResponse{completionStreamResponseCheckpoint
                                                         ::
                                                         Hs.Maybe
                                                           Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.Checkpoint,
                                                         completionStreamResponseCompletions ::
                                                         Hs.Vector
                                                           Com.Digitalasset.Ledger.Api.V1.Completion.Completion}
                              deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CompletionStreamResponse where
        nameOf _ = (Hs.fromString "CompletionStreamResponse")
 
instance HsProtobuf.HasDefault CompletionStreamResponse
 
instance HsProtobuf.Message CompletionStreamResponse where
        encodeMessage _
          CompletionStreamResponse{completionStreamResponseCheckpoint =
                                     completionStreamResponseCheckpoint,
                                   completionStreamResponseCompletions =
                                     completionStreamResponseCompletions}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.Checkpoint)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.Checkpoint)
                      completionStreamResponseCheckpoint)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce
                      @(Hs.Vector Com.Digitalasset.Ledger.Api.V1.Completion.Completion)
                      @(HsProtobuf.NestedVec Com.Digitalasset.Ledger.Api.V1.Completion.Completion)
                      completionStreamResponseCompletions))])
        decodeMessage _
          = (Hs.pure CompletionStreamResponse) <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.Checkpoint))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.CommandCompletionService.Checkpoint))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.NestedVec Com.Digitalasset.Ledger.Api.V1.Completion.Completion))
                 @(_ (Hs.Vector Com.Digitalasset.Ledger.Api.V1.Completion.Completion))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "Checkpoint")))
                (HsProtobuf.Single "checkpoint")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Repeated
                   (HsProtobuf.Named (HsProtobuf.Single "Completion")))
                (HsProtobuf.Single "completions")
                []
                "")]
 
instance HsJSONPB.ToJSONPB CompletionStreamResponse where
        toJSONPB (CompletionStreamResponse f1 f2)
          = (HsJSONPB.object ["checkpoint" .= f1, "completions" .= f2])
        toEncodingPB (CompletionStreamResponse f1 f2)
          = (HsJSONPB.pairs ["checkpoint" .= f1, "completions" .= f2])
 
instance HsJSONPB.FromJSONPB CompletionStreamResponse where
        parseJSONPB
          = (HsJSONPB.withObject "CompletionStreamResponse"
               (\ obj ->
                  (Hs.pure CompletionStreamResponse) <*> obj .: "checkpoint" <*>
                    obj .: "completions"))
 
instance HsJSONPB.ToJSON CompletionStreamResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CompletionStreamResponse where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CompletionStreamResponse where
        declareNamedSchema _
          = do let declare_checkpoint = HsJSONPB.declareSchemaRef
               completionStreamResponseCheckpoint <- declare_checkpoint
                                                       Proxy.Proxy
               let declare_completions = HsJSONPB.declareSchemaRef
               completionStreamResponseCompletions <- declare_completions
                                                        Proxy.Proxy
               let _ = Hs.pure CompletionStreamResponse <*>
                         HsJSONPB.asProxy declare_checkpoint
                         <*> HsJSONPB.asProxy declare_completions
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CompletionStreamResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("checkpoint",
                                                         completionStreamResponseCheckpoint),
                                                        ("completions",
                                                         completionStreamResponseCompletions)]}})
 
data Checkpoint = Checkpoint{checkpointRecordTime ::
                             Hs.Maybe Google.Protobuf.Timestamp.Timestamp,
                             checkpointOffset ::
                             Hs.Maybe Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset}
                deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named Checkpoint where
        nameOf _ = (Hs.fromString "Checkpoint")
 
instance HsProtobuf.HasDefault Checkpoint
 
instance HsProtobuf.Message Checkpoint where
        encodeMessage _
          Checkpoint{checkpointRecordTime = checkpointRecordTime,
                     checkpointOffset = checkpointOffset}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce @(Hs.Maybe Google.Protobuf.Timestamp.Timestamp)
                      @(HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp)
                      checkpointRecordTime)),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 2)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset)
                      checkpointOffset))])
        decodeMessage _
          = (Hs.pure Checkpoint) <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Google.Protobuf.Timestamp.Timestamp))
                 @(_ (Hs.Maybe Google.Protobuf.Timestamp.Timestamp))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 2)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named
                      (HsProtobuf.Dots
                         (HsProtobuf.Path ("google" Hs.:| ["protobuf", "Timestamp"])))))
                (HsProtobuf.Single "record_time")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 2)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "LedgerOffset")))
                (HsProtobuf.Single "offset")
                []
                "")]
 
instance HsJSONPB.ToJSONPB Checkpoint where
        toJSONPB (Checkpoint f1 f2)
          = (HsJSONPB.object ["record_time" .= f1, "offset" .= f2])
        toEncodingPB (Checkpoint f1 f2)
          = (HsJSONPB.pairs ["record_time" .= f1, "offset" .= f2])
 
instance HsJSONPB.FromJSONPB Checkpoint where
        parseJSONPB
          = (HsJSONPB.withObject "Checkpoint"
               (\ obj ->
                  (Hs.pure Checkpoint) <*> obj .: "record_time" <*> obj .: "offset"))
 
instance HsJSONPB.ToJSON Checkpoint where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON Checkpoint where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema Checkpoint where
        declareNamedSchema _
          = do let declare_record_time = HsJSONPB.declareSchemaRef
               checkpointRecordTime <- declare_record_time Proxy.Proxy
               let declare_offset = HsJSONPB.declareSchemaRef
               checkpointOffset <- declare_offset Proxy.Proxy
               let _ = Hs.pure Checkpoint <*> HsJSONPB.asProxy declare_record_time
                         <*> HsJSONPB.asProxy declare_offset
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "Checkpoint",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("record_time", checkpointRecordTime),
                                                        ("offset", checkpointOffset)]}})
 
data CompletionEndRequest = CompletionEndRequest{completionEndRequestLedgerId
                                                 :: Hs.Text,
                                                 completionEndRequestTraceContext ::
                                                 Hs.Maybe
                                                   Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext}
                          deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CompletionEndRequest where
        nameOf _ = (Hs.fromString "CompletionEndRequest")
 
instance HsProtobuf.HasDefault CompletionEndRequest
 
instance HsProtobuf.Message CompletionEndRequest where
        encodeMessage _
          CompletionEndRequest{completionEndRequestLedgerId =
                                 completionEndRequestLedgerId,
                               completionEndRequestTraceContext =
                                 completionEndRequestTraceContext}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   completionEndRequestLedgerId),
                (HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1000)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext)
                      completionEndRequestTraceContext))])
        decodeMessage _
          = (Hs.pure CompletionEndRequest) <*>
              (HsProtobuf.at HsProtobuf.decodeMessageField
                 (HsProtobuf.FieldNumber 1))
              <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.TraceContext.TraceContext))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1000)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim HsProtobuf.String)
                (HsProtobuf.Single "ledger_id")
                []
                ""),
             (HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1000)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "TraceContext")))
                (HsProtobuf.Single "trace_context")
                []
                "")]
 
instance HsJSONPB.ToJSONPB CompletionEndRequest where
        toJSONPB (CompletionEndRequest f1 f1000)
          = (HsJSONPB.object ["ledger_id" .= f1, "trace_context" .= f1000])
        toEncodingPB (CompletionEndRequest f1 f1000)
          = (HsJSONPB.pairs ["ledger_id" .= f1, "trace_context" .= f1000])
 
instance HsJSONPB.FromJSONPB CompletionEndRequest where
        parseJSONPB
          = (HsJSONPB.withObject "CompletionEndRequest"
               (\ obj ->
                  (Hs.pure CompletionEndRequest) <*> obj .: "ledger_id" <*>
                    obj .: "trace_context"))
 
instance HsJSONPB.ToJSON CompletionEndRequest where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CompletionEndRequest where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CompletionEndRequest where
        declareNamedSchema _
          = do let declare_ledger_id = HsJSONPB.declareSchemaRef
               completionEndRequestLedgerId <- declare_ledger_id Proxy.Proxy
               let declare_trace_context = HsJSONPB.declareSchemaRef
               completionEndRequestTraceContext <- declare_trace_context
                                                     Proxy.Proxy
               let _ = Hs.pure CompletionEndRequest <*>
                         HsJSONPB.asProxy declare_ledger_id
                         <*> HsJSONPB.asProxy declare_trace_context
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CompletionEndRequest",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("ledger_id", completionEndRequestLedgerId),
                                                        ("trace_context",
                                                         completionEndRequestTraceContext)]}})
 
data CompletionEndResponse = CompletionEndResponse{completionEndResponseOffset
                                                   ::
                                                   Hs.Maybe
                                                     Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset}
                           deriving (Hs.Show, Hs.Eq, Hs.Ord, Hs.Generic, Hs.NFData)
 
instance HsProtobuf.Named CompletionEndResponse where
        nameOf _ = (Hs.fromString "CompletionEndResponse")
 
instance HsProtobuf.HasDefault CompletionEndResponse
 
instance HsProtobuf.Message CompletionEndResponse where
        encodeMessage _
          CompletionEndResponse{completionEndResponseOffset =
                                  completionEndResponseOffset}
          = (Hs.mconcat
               [(HsProtobuf.encodeMessageField (HsProtobuf.FieldNumber 1)
                   (Hs.coerce
                      @(Hs.Maybe Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset)
                      @(HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset)
                      completionEndResponseOffset))])
        decodeMessage _
          = (Hs.pure CompletionEndResponse) <*>
              (Hs.coerce
                 @(_ (HsProtobuf.Nested Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset))
                 @(_ (Hs.Maybe Com.Digitalasset.Ledger.Api.V1.LedgerOffset.LedgerOffset))
                 (HsProtobuf.at HsProtobuf.decodeMessageField
                    (HsProtobuf.FieldNumber 1)))
        dotProto _
          = [(HsProtobuf.DotProtoField (HsProtobuf.FieldNumber 1)
                (HsProtobuf.Prim
                   (HsProtobuf.Named (HsProtobuf.Single "LedgerOffset")))
                (HsProtobuf.Single "offset")
                []
                "")]
 
instance HsJSONPB.ToJSONPB CompletionEndResponse where
        toJSONPB (CompletionEndResponse f1)
          = (HsJSONPB.object ["offset" .= f1])
        toEncodingPB (CompletionEndResponse f1)
          = (HsJSONPB.pairs ["offset" .= f1])
 
instance HsJSONPB.FromJSONPB CompletionEndResponse where
        parseJSONPB
          = (HsJSONPB.withObject "CompletionEndResponse"
               (\ obj -> (Hs.pure CompletionEndResponse) <*> obj .: "offset"))
 
instance HsJSONPB.ToJSON CompletionEndResponse where
        toJSON = HsJSONPB.toAesonValue
        toEncoding = HsJSONPB.toAesonEncoding
 
instance HsJSONPB.FromJSON CompletionEndResponse where
        parseJSON = HsJSONPB.parseJSONPB
 
instance HsJSONPB.ToSchema CompletionEndResponse where
        declareNamedSchema _
          = do let declare_offset = HsJSONPB.declareSchemaRef
               completionEndResponseOffset <- declare_offset Proxy.Proxy
               let _ = Hs.pure CompletionEndResponse <*>
                         HsJSONPB.asProxy declare_offset
               Hs.return
                 (HsJSONPB.NamedSchema{HsJSONPB._namedSchemaName =
                                         Hs.Just "CompletionEndResponse",
                                       HsJSONPB._namedSchemaSchema =
                                         Hs.mempty{HsJSONPB._schemaParamSchema =
                                                     Hs.mempty{HsJSONPB._paramSchemaType =
                                                                 Hs.Just HsJSONPB.SwaggerObject},
                                                   HsJSONPB._schemaProperties =
                                                     HsJSONPB.insOrdFromList
                                                       [("offset", completionEndResponseOffset)]}})